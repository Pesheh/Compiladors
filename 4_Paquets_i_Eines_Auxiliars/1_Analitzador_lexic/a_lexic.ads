-- A lexical scanner generated by aflex
with text_io; use text_io;
with kobal_dfa; use kobal_dfa; 
with kobal_io; use kobal_io; 
--# line 1 "kobal.l"
-- alphabetical character
-- graphic char including " and Space
-- idem as before excluding "
-- digit
-- non zero digit
-- numbers like x_yyy, xy_yyy, xyy_yyy, xyy(_yyy)+ where x != 0
-- numbers. Zero included
-- inner element of a string, it may be a graphic character (without the double quote) or a double double quote.
--# line 37 "kobal.l"


  with Ada.Text_IO, Ada.Integer_Text_IO; use Ada.Text_IO, Ada.Integer_Text_IO;
  with kobal_io,kobal_dfa;use kobal_io,kobal_dfa;
  with decls; use decls;
  with decls.d_arbre;
  with kobal_tokens;
  package a_lexic is
    procedure open(name: in String);
    procedure close;
    procedure YYError(s: in String);
    function YYPos return decls.d_arbre.posicio;
    function YYLex return kobal_tokens.Token;

    --Auxiliar functions to allow external packages use these *_dfa functions
    function YYText return String;
    function YYLength return Integer;
  end a_lexic;
